<!--Copyright (c) Costin Morariu. All rights reserved.
Licensed under the MIT license. See LICENSE file in the project root for full license information.-->

<Page
    x:Class="Wontstop.Climb.Ui.Uwp.Views.ProblemsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:windowsStateTriggers="using:WindowsStateTriggers"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:views="using:Wontstop.Climb.Ui.Uwp.Views"
    xmlns:mvvm="using:Mvvm.WinRT.AttachedProperties"
    mc:Ignorable="d" 
    DataContext="{Binding ProblemsViewModel, Source={StaticResource ViewModelLocator}}">

    <Page.Resources>
        <Style TargetType="ListViewItem">
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="Background" Value="{ThemeResource SystemControlPageBackgroundChromeLowBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter
                            CheckMode="Inline"
                            SelectionCheckMarkVisualEnabled="True"
                            ContentMargin="{TemplateBinding Padding}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                            CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                            DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                            DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                            FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                            FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                            PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                            PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                            SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                            SelectedBackground="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                            PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                            SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}"
                            SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ProblemDataTemplate">
            <Grid x:Name="ProblemItemPanel">
                <views:ProblemItemView 
                    mvvm:ViewModel.Model="{Binding DataContext, ElementName=ProblemItemPanel}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="SuggestedProblemDataTemplate">
            <Grid x:Name="SuggestedProblemItemPanel"
                Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid x:Name="ProblemControlPanel"
                    Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <SymbolIcon x:Name="DoneSymbolIcon"
                        Grid.Column="0"
                        Margin="0,0,8,0"
                        VerticalAlignment="Center"
                        Symbol="Accept"
                        Visibility="{Binding Tick, Converter={StaticResource ObjectToVisibilityConverter}}"/>
                    <Ellipse x:Name="ColorElipse"
                        Grid.Column="1"
                        Width="16" Height="16"
                        Fill="{Binding ColorName, Converter={StaticResource StringToColorConverter}}"/>
                    <TextBlock x:Name="GradeTextBlock"
                        Grid.Column="2"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding GradeFont}"/>
                    <TextBlock x:Name="TagTextBlock"
                        Grid.Column="3"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding TagShort}"/>
                    <TextBlock x:Name="RemovedTextBlock"
                        Grid.Column="4"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Text="removed"
                        Foreground="Red"
                        Visibility="{Binding Visible, Converter={StaticResource IntOneToVisibilityConverter}, ConverterParameter=True}"/>
                </Grid>
                <StackPanel x:Name="TickPanel"
                    Grid.Row="1"
                    Margin="0,2"
                    Orientation="Horizontal"
                    Visibility="{Binding Tick, Converter={StaticResource ObjectToVisibilityConverter}}">
                    <TextBlock Text="Ticked" 
                        Foreground="Gray"
                        Style="{ThemeResource CaptionTextBlockStyle}"/>
                    <TextBlock x:Name="LoggedDateTextBlock"
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        VerticalAlignment="Center"
                        Style="{ThemeResource CaptionTextBlockStyle}"
                        Text="{Binding Tick.Timestamp, Converter={StaticResource DateTimeToDateStringConverter}}"/>
                    <TextBlock Text="|" 
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        Style="{ThemeResource CaptionTextBlockStyle}"/>
                    <TextBlock x:Name="TriesCountTextBlock"
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        VerticalAlignment="Center"
                        Text="{Binding Tick.Tries}"
                        Style="{ThemeResource CaptionTextBlockStyle}"/>
                    <TextBlock x:Name="OneTryLabelTextBlock"
                        Text="try"
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        VerticalAlignment="Center"
                        Style="{ThemeResource CaptionTextBlockStyle}"
                        Visibility="{Binding Tick.Tries, Converter={StaticResource IntOneToBoolConverter}, ConverterParameter=False}"/>
                    <TextBlock x:Name="ManyTriesLabelTextBlock"
                        Text="tries"
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        VerticalAlignment="Center"
                        Style="{ThemeResource CaptionTextBlockStyle}"
                        Visibility="{Binding Tick.Tries, Converter={StaticResource IntOneToBoolConverter}, ConverterParameter=True}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{Binding LoadCommand}"/>
        </core:EventTriggerBehavior>
        <core:EventTriggerBehavior EventName="Unloaded">
            <core:InvokeCommandAction Command="{Binding UnloadCommand}"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <Grid x:Name="ProblemsPagePanel"
        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ProgressStates">
                <VisualState x:Name="BusyState">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:EqualsStateTrigger Value="{Binding Busy}" EqualTo="True"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ProblemsPagePanel.Opacity" Value="0.5"/>
                        <Setter Target="BusyProgress.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid x:Name="ContentPanel">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="{StaticResource SmallDeviceMaxWidth}"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="SuggestionsPanel"
                Grid.Row="0"
                Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <AutoSuggestBox x:Name="TicksSuggestBox"
                    Margin="12,8"
                    Text="{Binding Tags, Mode=TwoWay}"
                    ItemsSource="{Binding SuggestedProblems}"
                    ItemTemplate="{StaticResource SuggestedProblemDataTemplate}"
                    PlaceholderText="type some tags (e.g. A1001,B2001)">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="TextChanged">
                            <core:InvokeCommandAction 
                                Command="{Binding TagsChangedCommand}"
                                InputConverter="{StaticResource AutoSuggestBoxTextChangedEventArgsToBoolConverter}"/>
                        </core:EventTriggerBehavior>
                        <!--<core:EventTriggerBehavior EventName="QuerySubmitted">
                            <core:InvokeCommandAction 
                                Command="{Binding TagsSelectedCommand}"
                                InputConverter="{StaticResource AutoSuggestBoxQuerySubmittedEventArgsToStringConverter}"/>
                        </core:EventTriggerBehavior>-->
                        <core:EventTriggerBehavior EventName="SuggestionChosen">
                            <core:InvokeCommandAction 
                                Command="{Binding SuggestionChosenCommand}"
                                InputConverter="{StaticResource AutoSuggestBoxSuggestionChosenEventArgsToStringConverter}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AutoSuggestBox>
                <Button x:Name="TickButton"
                    Grid.Column="1"
                    Margin="0,0,12,0"
                    Command="{Binding TickCommand}">
                    <SymbolIcon Symbol="Save"/>
                </Button>
            </Grid>
            <ListView x:Name="TicksList"
                Grid.Row="1"
                Margin="0,4,0,0"
                SelectionMode="None"
                HorizontalAlignment="Stretch"
                ItemsSource="{Binding Ticks}"
                ItemTemplate="{StaticResource ProblemDataTemplate}"
                HeaderTemplate="{StaticResource EmptyDataTemplate}">
            </ListView>
            <!--<ListView x:Name="SectionsList"
                Grid.Row="2"
                Margin="0,4,0,0"
                SelectionMode="None"
                HorizontalAlignment="Stretch"
                ItemsSource="{Binding Sections}"
                HeaderTemplate="{StaticResource EmptyDataTemplate}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="dtos:WallSection">
                        <Grid x:Name="SectionItemPanel"
                            Margin="0,4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="SectionName"
                                Grid.Row="0"
                                IsChecked="False"
                                Content="{Binding FullName}"
                                HorizontalAlignment="Stretch">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Checked">
                                        <core:InvokeCommandAction Command="{Binding DataContext.PublishTagsCommand, ElementName=SectionsList}"/>
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </ToggleButton>
                            <ListView x:Name="ProblemsList"
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                SelectionMode="None"
                                ItemsSource="{Binding Problems}"
                                ItemTemplate="{StaticResource ProblemDataTemplate}"
                                HeaderTemplate="{StaticResource EmptyDataTemplate}"
                                Visibility="{Binding IsChecked, ElementName=SectionName, Converter={StaticResource BoolToVisibilityConverter}}">
                            </ListView>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>-->
            <Grid x:Name="EmptyStatePanel"
                Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2"
                Visibility="{Binding Empty, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock x:Name="EmptyState"
                    TextAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Text="We couldn't find any problem for the gym you signed in."/>
            </Grid>
        </Grid>
        <ProgressRing x:Name="BusyProgress"
            IsActive="True"
            Visibility="Collapsed"
            Width="{StaticResource ProgressSize}" 
            Height="{StaticResource ProgressSize}"/>
    </Grid>
</Page>
