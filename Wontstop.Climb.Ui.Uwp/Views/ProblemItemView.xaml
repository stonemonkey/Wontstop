<!--Copyright (c) Costin Morariu. All rights reserved.
Licensed under the MIT license. See LICENSE file in the project root for full license information.-->

<UserControl
    x:Class="Wontstop.Climb.Ui.Uwp.Views.ProblemItemView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    DataContext="{Binding ProblemItemViewModel, Source={StaticResource ViewModelLocator}}">

    <Button x:Name="ProblemItemButton"
        HorizontalAlignment="Stretch"
        HorizontalContentAlignment="Stretch"
        Command="{Binding OpenDetailsCommand}">

        <Grid x:Name="ProblemItemPanel"
            Background="Transparent">

            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Loaded">
                    <core:InvokeCommandAction Command="{Binding LoadCommand}"/>
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="Unloaded">
                    <core:InvokeCommandAction Command="{Binding UnloadCommand}"/>
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <Grid x:Name="ProblemControlPanel"
                Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Ellipse x:Name="ColorElipse"
                    Grid.Column="1"
                    Width="16" Height="16"
                    Fill="{Binding Problem.ColorName, Converter={StaticResource StringToColorConverter}}"/>
                <TextBlock x:Name="GradeTextBlock"
                    Grid.Column="2"
                    Margin="8,0,0,0"
                    VerticalAlignment="Center"
                    Text="{Binding Problem.GradeName}"/>
                <TextBlock x:Name="TagTextBlock"
                    Grid.Column="3"
                    Margin="8,0,0,0"
                    VerticalAlignment="Center"
                    Text="{Binding Problem.TagShort}"/>
                <TextBlock x:Name="RemovedTextBlock"
                    Grid.Column="4"
                    Margin="8,0,0,0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Text="(removed)"
                    Foreground="Red"
                    Visibility="{Binding Problem.Visible, Converter={StaticResource IntOneToVisibilityConverter}, ConverterParameter=True}"/>
            </Grid>
            
            <StackPanel x:Name="ProblemPanel"
                Grid.Row="1"
                Margin="0,2"
                Orientation="Horizontal"
                HorizontalAlignment="Stretch">
                <TextBlock Text="{Binding Problem.ColorName}" 
                    Foreground="Gray"
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
                <TextBlock Text="|" 
                    Margin="4,0,0,0"
                    Foreground="Gray"
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
                <TextBlock x:Name="RouteTypeTextBlock"
                    Margin="4,0,0,0"
                    Foreground="Gray"
                    VerticalAlignment="Center"
                    Text="{Binding Problem.RouteType}"
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
                <StackPanel x:Name="TickPanel"
                    Orientation="Horizontal"
                    Visibility="{Binding HasTick, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=False}">
                    <TextBlock Text="|" 
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        Style="{ThemeResource CaptionTextBlockStyle}"/>
                    <TextBlock x:Name="TicksCountTextBlock"
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        VerticalAlignment="Center"
                        Text="{Binding Details.TickCount}"
                        Style="{ThemeResource CaptionTextBlockStyle}"/>
                    <TextBlock x:Name="OneTickLabelTextBlock"
                        Text="tick"
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        VerticalAlignment="Center"
                        Style="{ThemeResource CaptionTextBlockStyle}"
                        Visibility="{Binding Details.TickCount, Converter={StaticResource IntOneToBoolConverter}, ConverterParameter=False}"/>
                    <TextBlock x:Name="ManyTicksLabelTextBlock"
                        Text="ticks"
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        VerticalAlignment="Center"
                        Style="{ThemeResource CaptionTextBlockStyle}"
                        Visibility="{Binding Details.TickCount, Converter={StaticResource IntOneToBoolConverter}, ConverterParameter=True}"/>
                </StackPanel>
            </StackPanel>
            
            <StackPanel x:Name="QuickActionsPanel"
                Grid.Row="0" Grid.RowSpan="2"
                Orientation="Horizontal"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Right">
                <!--<Button x:Name="EditButton"
                    VerticalAlignment="Stretch"
                    Command="{Binding AddTickCommand}"
                    Visibility="{Binding HasTick, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
                    <TextBlock 
                        Text="&#xE70F;"
                        VerticalAlignment="Center"
                        FontFamily="Segoe MDL2 Assets"/>
                </Button>-->
                <Button x:Name="DeleteButton"
                    VerticalAlignment="Stretch"
                    Command="{Binding DeleteTickCommand}"
                    Visibility="{Binding HasTick, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=False}">
                    <TextBlock 
                        Text="&#xE74D;"
                        VerticalAlignment="Center"
                        FontFamily="Segoe MDL2 Assets"/>
                </Button>
            </StackPanel>
        </Grid>
    </Button>
</UserControl>
