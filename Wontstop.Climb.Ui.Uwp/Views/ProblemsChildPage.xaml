<!--Copyright (c) Costin Morariu. All rights reserved.
Licensed under the MIT license. See LICENSE file in the project root for full license information.-->

<views:MainChildPageBase
    x:Class="Wontstop.Climb.Ui.Uwp.Views.ProblemsChildPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:views="using:Wontstop.Climb.Ui.Uwp.Views"
    xmlns:attachedProperties="using:MvvmToolkit.WinRT.AttachedProperties"
    xmlns:stateTriggers="using:MvvmToolkit.Uwp.StateTriggers"
    mc:Ignorable="d" 
    DataContext="{Binding ProblemsViewModel, Source={StaticResource ViewModelLocator}}">

    <Page.Resources>
        <Style TargetType="ListViewItem">
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter
                            CheckMode="Inline"
                            SelectionCheckMarkVisualEnabled="True"
                            ContentMargin="{TemplateBinding Padding}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                            CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                            DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                            DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                            FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                            FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                            PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                            PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                            SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                            SelectedBackground="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                            PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                            SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}"
                            SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <DataTemplate x:Key="SectionItemDataTemplate">
            <Grid x:Name="SectionItemPanel">
                <views:WallSectionItemView 
                    attachedProperties:ViewModel.Model="{Binding DataContext, ElementName=SectionItemPanel}"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{Binding LoadCommand}"/>
        </core:EventTriggerBehavior>
        <core:EventTriggerBehavior EventName="Unloaded">
            <core:InvokeCommandAction Command="{Binding UnloadCommand}"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <Grid x:Name="PageRootPanel"
        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ScreenStates">
                <VisualState x:Name="SmallScreens">
                    <VisualState.StateTriggers>
                        <stateTriggers:CompositeStateTrigger Operator="Or">
                            <stateTriggers:CompositeStateTrigger.StateTriggers>
                                <stateTriggers:DeviceFamilyTrigger DeviceFamily="Windows.Mobile"/>
                                <stateTriggers:AdaptiveTrigger MinWindowWidth="0" MaxWindowWidth="{StaticResource SmallDeviceMaxWidth}"/>
                            </stateTriggers:CompositeStateTrigger.StateTriggers>
                        </stateTriggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TitleTextBlock.Style" Value="{ThemeResource BodyTextBlockStyle}"/>
                        <Setter Target="TitleTextBlock.Margin" Value="{StaticResource MenuItemCompactPanelThickness}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="BigScreens">
                    <VisualState.StateTriggers>
                        <stateTriggers:AdaptiveTrigger MinWindowWidth="{StaticResource MediumDeviceMaxWidth}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ProgressStates">
                <VisualState x:Name="BusyState">
                    <VisualState.StateTriggers>
                        <stateTriggers:EqualsStateTrigger Value="{Binding Busy}" EqualTo="True"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PageRootPanel.Opacity" Value="0.5"/>
                        <Setter Target="BusyProgress.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid x:Name="TitleBarPanel"
            Grid.Row="0"
            Style="{StaticResource ChildPageTitlePanelStyle}">
            <TextBlock x:Name="TitleTextBlock"
                Text="{Binding Title}"
                Style="{StaticResource ChildPageTitleTextBlockStyle}"/>
        </Grid>

        <Grid x:Name="ContentPanel"
            Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ComboBox x:Name="GymComboBox"
                Grid.Row="0"
                Style="{StaticResource GymComboBoxStyle}"
                ItemsSource="{Binding Locations}"
                SelectedItem="{Binding SelectedLocation, Mode=TwoWay}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="SelectionChanged">
                        <core:InvokeCommandAction Command="{Binding ChangeLocationCommand}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </ComboBox>
            <ListView x:Name="SectionsList"
                Grid.Row="1"
                Margin="0,4,0,0"
                SelectionMode="None"
                HorizontalAlignment="Stretch"
                ItemsSource="{Binding Sections}"
                HeaderTemplate="{StaticResource EmptyDataTemplate}"
                ItemTemplate="{StaticResource SectionItemDataTemplate}">
            </ListView>
            <Grid x:Name="EmptyStatePanel"
                Grid.Row="0" Grid.RowSpan="2"
                Visibility="{Binding Empty, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock x:Name="EmptyStateTextBlock"
                    Style="{StaticResource EmptyStateTextBlockStyle}"
                    Text="We couldn't find any problem for the selected gym."/>
            </Grid>
        </Grid>
        
        <ProgressRing x:Name="BusyProgress"
            Grid.Row="0" Grid.RowSpan="2"
            Style="{StaticResource BusyProgressRingStyle}"/>
    </Grid>
</views:MainChildPageBase>
