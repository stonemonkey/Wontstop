<!--Copyright (c) Costin Morariu. All rights reserved.
Licensed under the MIT license. See LICENSE file in the project root for full license information.-->

<UserControl
    x:Class="Wontstop.Climb.Ui.Uwp.Views.TagProblemsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:dtos="using:Problemator.Core.Dtos"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:uc="using:Wontstop.Climb.Ui.Uwp.UserControls"
    mc:Ignorable="d"
    DataContext="{Binding TagProblemsViewModel, Source={StaticResource ViewModelLocator}}">

    <UserControl.Resources>
        <DataTemplate x:Key="GradeItemDataTemplate" x:DataType="dtos:Grade">
            <Grid x:Name="TickItemPanel">
                <TextBlock Text="{x:Bind Name}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="SuggestedProblemDataTemplate" x:DataType="dtos:WallProblem">
            <Grid x:Name="SuggestedProblemItemPanel"
                Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid x:Name="ProblemItemPanel"
                    Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <SymbolIcon x:Name="DoneSymbolIcon"
                        Grid.Column="0"
                        Margin="0,0,8,0"
                        VerticalAlignment="Center"
                        Symbol="Accept"
                        Visibility="{x:Bind Tick, Converter={StaticResource ObjectToVisibilityConverter}}"/>
                    <Ellipse x:Name="ColorElipse"
                        Grid.Column="1"
                        Width="16" Height="16"
                        Fill="{x:Bind ColorName, Converter={StaticResource StringToColorConverter}}"/>
                    <TextBlock x:Name="GradeTextBlock"
                        Grid.Column="2"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"
                        Text="{x:Bind GradeName}"/>
                    <TextBlock x:Name="TagTextBlock"
                        Grid.Column="3"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"
                        Text="{x:Bind TagShort}"/>
                    <TextBlock x:Name="RemovedTextBlock"
                        Grid.Column="4"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Text="removed"
                        Foreground="Red"
                        Visibility="{x:Bind Visible, Converter={StaticResource IntOneToVisibilityConverter}, ConverterParameter=True}"/>
                </Grid>
                <StackPanel x:Name="TickPanel"
                    Grid.Row="1"
                    Margin="0,2"
                    Orientation="Horizontal"
                    Visibility="{x:Bind Tick, Converter={StaticResource ObjectToVisibilityConverter}}">
                    <TextBlock Text="Ticked" 
                        Foreground="Gray"
                        Style="{ThemeResource CaptionTextBlockStyle}"/>
                    <TextBlock x:Name="LoggedDateTextBlock"
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        VerticalAlignment="Center"
                        Style="{ThemeResource CaptionTextBlockStyle}"
                        Text="{x:Bind Tick.Timestamp, Converter={StaticResource DateTimeToDateStringConverter}}"/>
                    <TextBlock Text="|" 
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        Style="{ThemeResource CaptionTextBlockStyle}"/>
                    <TextBlock x:Name="TriesCountTextBlock"
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        VerticalAlignment="Center"
                        Text="{x:Bind Tick.Tries}"
                        Style="{ThemeResource CaptionTextBlockStyle}"/>
                    <TextBlock x:Name="OneTryLabelTextBlock"
                        Text="try"
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        VerticalAlignment="Center"
                        Style="{ThemeResource CaptionTextBlockStyle}"
                        Visibility="{x:Bind Tick.Tries, Converter={StaticResource IntOneToVisibilityConverter}, ConverterParameter=False}"/>
                    <TextBlock x:Name="ManyTriesLabelTextBlock"
                        Text="tries"
                        Margin="4,0,0,0"
                        Foreground="Gray"
                        VerticalAlignment="Center"
                        Style="{ThemeResource CaptionTextBlockStyle}"
                        Visibility="{x:Bind Tick.Tries, Converter={StaticResource IntOneToVisibilityConverter}, ConverterParameter=True}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
   
    <Grid x:Name="TagProblemsViewPanel"
        HorizontalAlignment="Stretch"
        Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}">

        <interactivity:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="Loaded">
                <core:InvokeCommandAction Command="{Binding LoadCommand}"/>
            </core:EventTriggerBehavior>
            <core:EventTriggerBehavior EventName="Unloaded">
                <core:InvokeCommandAction Command="{Binding UnloadCommand}"/>
            </core:EventTriggerBehavior>
        </interactivity:Interaction.Behaviors>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <Grid x:Name="SuggestionsPanel"
            Grid.Row="0"
            Background="Transparent">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock x:Name="NoProblemsTextBlock"
                Margin="24,8"
                Foreground="Red"
                TextWrapping="Wrap"
                VerticalAlignment="Center"
                Text="We couldn't find any problem for the selected gym."
                Visibility="{Binding AreProblemsMissing, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=False}"/>
            
            <AutoSuggestBox x:Name="TicksAutoSuggestBox"
                Margin="12,8"
                Text="{Binding Tag, Mode=TwoWay}"
                ItemsSource="{Binding SuggestedProblems}"
                ItemTemplate="{StaticResource SuggestedProblemDataTemplate}"
                PlaceholderText="type a tag (e.g. A1001)"
                Visibility="{Binding AreProblemsMissing, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="TextChanged">
                        <core:InvokeCommandAction 
                            Command="{Binding TagsChangedCommand}"
                            InputConverter="{StaticResource AutoSuggestBoxTextChangedEventArgsToBoolConverter}"/>
                    </core:EventTriggerBehavior>
                    <core:EventTriggerBehavior EventName="SuggestionChosen">
                        <core:InvokeCommandAction 
                            Command="{Binding SuggestionChosenCommand}"
                            InputConverter="{StaticResource AutoSuggestBoxSuggestionChosenEventArgsToStringConverter}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AutoSuggestBox>
        </Grid>

        <Grid x:Name="TickDetailsPanel" 
            Grid.Row="1"
            Visibility="{Binding CanTick, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
        
            <Grid x:Name="TickPanel">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <ComboBox x:Name="GradeOpinionComboBox"
                    Grid.Column="0"
                    Margin="12,12,12,8"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    PlaceholderText="grade opinion"
                    ItemsSource="{Binding Grades}"
                    SelectedItem="{Binding SelectedGrade, Mode=TwoWay}"
                    ItemTemplate="{StaticResource GradeItemDataTemplate}">
                </ComboBox>

                <ComboBox x:Name="AscentTypeComboBox"
                    Grid.Column="1"
                    Margin="12,12,12,8"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Stretch"
                    PlaceholderText="ascent type"
                    ItemsSource="{Binding AscentTypes}"
                    SelectedItem="{Binding SelectedAscentType, Mode=TwoWay}"
                    Visibility="{Binding RouteType, Converter={StaticResource StringEqualToVisibilityConverter}, ConverterParameter=sport}">
                </ComboBox>

                <uc:TriesCounterUserControl 
                    Grid.Column="3"
                    Margin="12,8,12,8"
                    HorizontalAlignment="Right"
                    Count="{Binding TriesCount, Mode=TwoWay}"/>
            </Grid>
        
            <Button x:Name="TickButton"
                Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                Margin="12,4,12,20"
                Content="Tick"
                HorizontalAlignment="Stretch"
                Command="{Binding TickCommand}">
            </Button>
        </Grid>
    </Grid>
</UserControl>
