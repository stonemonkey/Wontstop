<!--Copyright (c) Costin Morariu. All rights reserved.
Licensed under the MIT license. See LICENSE file in the project root for full license information.-->

<Page
    x:Class="Wontstop.Ui.Uwp.Views.HistoryPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:RunKeeper.WinRT.HealthGraph.Activities"
    xmlns:stateTriggers="using:MvvmToolkit.Uwp.StateTriggers"
    xmlns:controls="using:MvvmToolkit.Uwp.Controls"
    xmlns:behaviors="using:MvvmToolkit.Uwp.Behaviors"
    mc:Ignorable="d"
    DataContext="{Binding HistoryViewModel, Source={StaticResource ViewModelLocator}}">
    
    <Page.Resources>
        <CollectionViewSource x:Key="HistoryCollectionViewSource" 
            Source="{Binding History.Items}"
            IsSourceGrouped="True"/>

        <DataTemplate x:Key="HistoryGroupHeaderDataTemplate">
            <TextBlock
                Text="{Binding Key}"
                Style="{StaticResource CaptionTextBlockStyle}"/>
        </DataTemplate>
        
        <DataTemplate x:Key="HistoryCollapsedGroupHeaderDataTemplate">
            <TextBlock
                Text="{Binding Group.Key}"
                Style="{StaticResource SubtitleTextBlockStyle}"/>
        </DataTemplate>
        
        <DataTemplate x:Key="HistoryItemTemplate" x:DataType="local:ActivityHistoryItemDto">
            <Grid x:Name="HistoryItemPanel">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="HistoryItemLeftPanel"
                    Grid.Column="0" 
                    Orientation="Horizontal">
                    <TextBlock x:Name="ActivityTypeTextBlock"
                        Margin="8,0,0,0" 
                        VerticalAlignment="Bottom"
                        Text="{Binding Type}"
                        Style="{StaticResource SubtitleTextBlockStyle}"/>
                    <TextBlock x:Name="ActivityDistanceTextBlock"
                        Margin="8,0,0,2"
                        VerticalAlignment="Bottom"
                        Style="{StaticResource BodyTextBlockStyle}"
                        Text="{Binding TotalDistance, Converter={StaticResource DoubleMetersToStringKiloMetersConverter}}"/>
                    <TextBlock x:Name="ActivityDistanceUnitTextBlock"
                        Margin="4,0,0,2" Text="Km"
                        VerticalAlignment="Bottom"
                        Style="{StaticResource BodyTextBlockStyle}"/>
                </StackPanel>
                <TextBlock x:Name="ActivityTimeTextBlock"
                    Grid.Column="1"
                    Margin="0,0,0,2" 
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Right"
                    Style="{StaticResource BodyTextBlockStyle}"
                    Text="{Binding StartTime, Converter={StaticResource DateTimeToStringConverter}}"/>
            </Grid>
        </DataTemplate>

        <Style TargetType="ListViewHeaderItem">
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="MinHeight" Value="24"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="{ThemeResource ListViewHeaderItemThemeFontSize}"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="Background" Value="{ThemeResource SystemControlForegroundBaseLowBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewHeaderItem">
                        <Grid
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="ListViewItem">
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="Background" Value="{ThemeResource SystemControlPageBackgroundChromeLowBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter
                            CheckMode="Inline"
                            SelectionCheckMarkVisualEnabled="True"
                            ContentMargin="{TemplateBinding Padding}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                            CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                            DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                            DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                            FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                            FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                            PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                            PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                            SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                            SelectedBackground="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                            PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                            SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}"
                            SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{Binding LoadCommand}"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <Grid x:Name="HistoryPagePanel"
        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                      
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ScreenStates">
                <VisualState x:Name="SmallScreens">
                    <VisualState.StateTriggers>
                        <stateTriggers:CompositeStateTrigger Operator="Or">
                            <stateTriggers:CompositeStateTrigger.StateTriggers>
                                <stateTriggers:DeviceFamilyTrigger DeviceFamily="Windows.Mobile"/>
                                <stateTriggers:AdaptiveTrigger MinWindowWidth="0" MaxWindowWidth="{StaticResource SmallDeviceMaxWidth}"/>
                            </stateTriggers:CompositeStateTrigger.StateTriggers>
                        </stateTriggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ActivitiesSemanticZoom.Width" Value="NaN"/>
                        <Setter Target="ActivitiesSemanticZoom.HorizontalAlignment" Value="Stretch"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ProgressStates">
                <VisualState x:Name="BusyState">
                    <VisualState.StateTriggers>
                        <stateTriggers:EqualsStateTrigger Value="{Binding Busy}" EqualTo="True"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HistoryPagePanel.Opacity" Value="0.5"/>
                        <Setter Target="BusyProgress.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <SemanticZoom x:Name="ActivitiesSemanticZoom"
                Width="320"
                HorizontalAlignment="Left">
                <SemanticZoom.ZoomedInView>
                    <controls:EdgeTappedListView x:Name="ActivitiesList" 
                        SelectionMode="Single"
                        IsItemClickEnabled="True"
                        SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                        ItemTemplate="{StaticResource HistoryItemTemplate}"
                        IsItemLeftEdgeTapEnabled="{Binding SingleSelection, Mode=TwoWay}"
                        ItemsSource="{Binding Source={StaticResource HistoryCollectionViewSource}}">
                        <ListView.GroupStyle>
                            <GroupStyle 
                                HidesIfEmpty="True" 
                                HeaderTemplate="{StaticResource HistoryGroupHeaderDataTemplate}">
                            </GroupStyle>
                        </ListView.GroupStyle>
                        <interactivity:Interaction.Behaviors>
                            <behaviors:ScrollToItemBehavior/>
                            <core:EventTriggerBehavior EventName="ItemClickOnSingleSelection">
                                <core:InvokeCommandAction 
                                    Command="{Binding ItemClickCommand}"
                                    InputConverter="{StaticResource ItemClickEventArgsToClickedItemObjectConverter}"/>
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </controls:EdgeTappedListView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <ListView x:Name="GroupedActivitiesList"
                        HeaderTemplate="{StaticResource EmptyDataTemplate}"
                        ItemTemplate="{StaticResource HistoryCollapsedGroupHeaderDataTemplate}"
                        ItemsSource="{Binding Source={StaticResource HistoryCollectionViewSource}, Path=CollectionGroups}">
                    </ListView>
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>
            <Grid x:Name="EmptyStatePanel"
                Visibility="{Binding Empty, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock x:Name="EmptyState"
                    TextAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Text="Nothing to see here yet? Start an activity or reconnect to RunKeeper."/>
            </Grid>
        </Grid>
        
        <CommandBar x:Name="FastOperationsCommandBar"
            Grid.Row="1"
            VerticalAlignment="Bottom"
            Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}">
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Name="AddItemAppBarButton" 
                    Icon="Add"
                    Label="Add Item"
                    Visibility="{Binding SingleSelection, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=False}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:InvokeCommandAction 
                                Command="{Binding AddNewCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
                
                <AppBarButton x:Name="SelectAppBarButton"
                    Icon="List"
                    Label="Select"
                    Visibility="{Binding SingleSelection, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=False}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:InvokeCommandAction 
                                Command="{Binding ShowMultiSelectionCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
                <AppBarButton x:Name="RemoveItemAppBarButton"
                    Icon="Delete"
                    Label="Delete" 
                    Visibility="{Binding SingleSelection, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}"/>
                <AppBarButton x:Name="CancelSelectionAppBarButton"
                    Icon="Cancel"
                    Label="Cancel"
                    Visibility="{Binding SingleSelection, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:InvokeCommandAction 
                                Command="{Binding CancelMultiSelectionCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
        </CommandBar>
        
        <ProgressRing x:Name="BusyProgress"
            Grid.Row="0" Grid.RowSpan="2"
            IsActive="True"
            Visibility="Collapsed"
            Width="{StaticResource ProgressSize}" 
            Height="{StaticResource ProgressSize}"/>
    </Grid>
</Page>
